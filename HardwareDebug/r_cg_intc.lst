   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_R_INTC_Create
  29                             	_R_INTC_Create:
  30                             	.LFB0:
  31                             		.file 1 "../src/r_cg_intc.c"
   1:../src/r_cg_intc.c **** /**************************************************************************************************
   2:../src/r_cg_intc.c **** * DISCLAIMER
   3:../src/r_cg_intc.c **** * This software is supplied by Renesas Electronics Corporation and is only 
   4:../src/r_cg_intc.c **** * intended for use with Renesas products. No other uses are authorized. This 
   5:../src/r_cg_intc.c **** * software is owned by Renesas Electronics Corporation and is protected under 
   6:../src/r_cg_intc.c **** * all applicable laws, including copyright laws.
   7:../src/r_cg_intc.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING 
   8:../src/r_cg_intc.c **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT 
   9:../src/r_cg_intc.c **** * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
  10:../src/r_cg_intc.c **** * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
  11:../src/r_cg_intc.c **** * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
  12:../src/r_cg_intc.c **** * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  13:../src/r_cg_intc.c **** * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR 
  14:../src/r_cg_intc.c **** * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE 
  15:../src/r_cg_intc.c **** * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  16:../src/r_cg_intc.c **** * Renesas reserves the right, without notice, to make changes to this software 
  17:../src/r_cg_intc.c **** * and to discontinue the availability of this software.  By using this software, 
  18:../src/r_cg_intc.c **** * you agree to the additional terms and conditions found by accessing the 
  19:../src/r_cg_intc.c **** * following link:
  20:../src/r_cg_intc.c **** * http://www.renesas.com/disclaimer
  21:../src/r_cg_intc.c **** *
  22:../src/r_cg_intc.c **** * Copyright (C) 2012 Renesas Electronics Corporation. All rights reserved.
  23:../src/r_cg_intc.c **** ***************************************************************************************************
  24:../src/r_cg_intc.c **** 
  25:../src/r_cg_intc.c **** /**************************************************************************************************
  26:../src/r_cg_intc.c **** * File Name    : r_cg_intc.c
  27:../src/r_cg_intc.c **** * Version      : Applilet3 for RL78/L12 V1.00.00 [23 Mar 2012]
  28:../src/r_cg_intc.c **** * Device(s)    : R5F10RLC
  29:../src/r_cg_intc.c **** * Tool-Chain   : GNURL78 v12.03
  30:../src/r_cg_intc.c **** * Description  : This file implements device driver for INTC module.
  31:../src/r_cg_intc.c **** * Creation Date: 21/01/2013
  32:../src/r_cg_intc.c **** ***************************************************************************************************
  33:../src/r_cg_intc.c **** 
  34:../src/r_cg_intc.c **** /**************************************************************************************************
  35:../src/r_cg_intc.c **** Includes
  36:../src/r_cg_intc.c **** ***************************************************************************************************
  37:../src/r_cg_intc.c **** /* Defines the I/O register structures */
  38:../src/r_cg_intc.c **** #include "iodefine.h"
  39:../src/r_cg_intc.c **** 
  40:../src/r_cg_intc.c **** /* Defines the extended I/O register structures */
  41:../src/r_cg_intc.c **** #include "iodefine_ext.h"
  42:../src/r_cg_intc.c **** 
  43:../src/r_cg_intc.c **** /* Header files inclusion */
  44:../src/r_cg_intc.c **** #include "r_cg_macrodriver.h"
  45:../src/r_cg_intc.c **** #include "r_cg_intc.h"
  46:../src/r_cg_intc.c **** #include "r_cg_userdefine.h"
  47:../src/r_cg_intc.c **** 
  48:../src/r_cg_intc.c **** 
  49:../src/r_cg_intc.c **** /**************************************************************************************************
  50:../src/r_cg_intc.c **** * Function Name: R_INTC_Create
  51:../src/r_cg_intc.c **** * Description  : This function initializes INTP module.
  52:../src/r_cg_intc.c **** * Arguments    : None
  53:../src/r_cg_intc.c **** * Return Value : None
  54:../src/r_cg_intc.c **** ***************************************************************************************************
  55:../src/r_cg_intc.c **** void R_INTC_Create (void)
  56:../src/r_cg_intc.c **** {
  32                             		.loc 1 56 0
  57:../src/r_cg_intc.c ****     /* Set INTP0 level 1 priority */
  58:../src/r_cg_intc.c ****     PPR10 = 0U;
  33                             		.loc 1 58 0
  34 0000 C9 F0 EC FF             		movw	r8, #-20
  35 0004 AD F0                   		movw	ax, r8
  36 0006 BD F4                   		movw	r12, ax
  37 0008 FA F4                   		movw	hl, r12
  38 000a 8B                      		mov	a, [hl]
  39 000b 9D F2                   		mov	r10, a
  40 000d 5A F2 FB                		and	r10, #-5
  41 0010 AD F0                   		movw	ax, r8
  42 0012 8D F2                   		mov	a, r10
  43 0014 9B                      		mov	[hl], a
  59:../src/r_cg_intc.c ****     PPR00 = 1U;
  44                             		.loc 1 59 0
  45 0015 C9 F0 E8 FF             		movw	r8, #-24
  46 0019 AD F0                   		movw	ax, r8
  47 001b BD F4                   		movw	r12, ax
  48 001d FA F4                   		movw	hl, r12
  49 001f 8B                      		mov	a, [hl]
  50 0020 9D F2                   		mov	r10, a
  51 0022 6A F2 04                		or	r10, #4
  52 0025 AD F0                   		movw	ax, r8
  53 0027 8D F2                   		mov	a, r10
  54 0029 9B                      		mov	[hl], a
  60:../src/r_cg_intc.c ****     
  61:../src/r_cg_intc.c ****     /* Set INTP3 level 1 priority */
  62:../src/r_cg_intc.c ****     PPR13 = 0U;
  55                             		.loc 1 62 0
  56 002a C9 F0 EC FF             		movw	r8, #-20
  57 002e AD F0                   		movw	ax, r8
  58 0030 BD F4                   		movw	r12, ax
  59 0032 FA F4                   		movw	hl, r12
  60 0034 8B                      		mov	a, [hl]
  61 0035 9D F2                   		mov	r10, a
  62 0037 5A F2 DF                		and	r10, #-33
  63 003a AD F0                   		movw	ax, r8
  64 003c 8D F2                   		mov	a, r10
  65 003e 9B                      		mov	[hl], a
  63:../src/r_cg_intc.c ****     PPR03 = 1U;
  66                             		.loc 1 63 0
  67 003f C9 F0 E8 FF             		movw	r8, #-24
  68 0043 AD F0                   		movw	ax, r8
  69 0045 BD F4                   		movw	r12, ax
  70 0047 FA F4                   		movw	hl, r12
  71 0049 8B                      		mov	a, [hl]
  72 004a 9D F2                   		mov	r10, a
  73 004c 6A F2 20                		or	r10, #32
  74 004f AD F0                   		movw	ax, r8
  75 0051 8D F2                   		mov	a, r10
  76 0053 9B                      		mov	[hl], a
  64:../src/r_cg_intc.c ****     
  65:../src/r_cg_intc.c ****     /* Set INTP4 level 1 priority */
  66:../src/r_cg_intc.c ****     PPR14 = 0U;
  77                             		.loc 1 66 0
  78 0054 C9 F0 EC FF             		movw	r8, #-20
  79 0058 AD F0                   		movw	ax, r8
  80 005a BD F4                   		movw	r12, ax
  81 005c FA F4                   		movw	hl, r12
  82 005e 8B                      		mov	a, [hl]
  83 005f 9D F2                   		mov	r10, a
  84 0061 5A F2 BF                		and	r10, #-65
  85 0064 AD F0                   		movw	ax, r8
  86 0066 8D F2                   		mov	a, r10
  87 0068 9B                      		mov	[hl], a
  67:../src/r_cg_intc.c ****     PPR04 = 1U;
  88                             		.loc 1 67 0
  89 0069 C9 F0 E8 FF             		movw	r8, #-24
  90 006d AD F0                   		movw	ax, r8
  91 006f BD F4                   		movw	r12, ax
  92 0071 FA F4                   		movw	hl, r12
  93 0073 8B                      		mov	a, [hl]
  94 0074 9D F2                   		mov	r10, a
  95 0076 6A F2 40                		or	r10, #64
  96 0079 AD F0                   		movw	ax, r8
  97 007b 8D F2                   		mov	a, r10
  98 007d 9B                      		mov	[hl], a
  68:../src/r_cg_intc.c ****     
  69:../src/r_cg_intc.c ****     EGN0 = _01_INTP0_EDGE_FALLING_SEL | _08_INTP3_EDGE_FALLING_SEL | _10_INTP4_EDGE_FALLING_SEL;
  99                             		.loc 1 69 0
 100 007e C9 F0 39 FF             		movw	r8, #-199
 101 0082 AD F0                   		movw	ax, r8
 102 0084 BD F2                   		movw	r10, ax
 103 0086 FA F2                   		movw	hl, r10
 104 0088 51 19                   		mov	a, #25
 105 008a 9B                      		mov	[hl], a
  70:../src/r_cg_intc.c ****     
  71:../src/r_cg_intc.c ****     /* Set INTP3 pin */
  72:../src/r_cg_intc.c ****     PFSEG2 &= 0xFBU;
 106                             		.loc 1 72 0
 107 008b C9 F0 02 03             		movw	r8, #770
 108 008f C9 F2 02 03             		movw	r10, #770
 109 0093 AD F2                   		movw	ax, r10
 110 0095 BD F4                   		movw	r12, ax
 111 0097 FA F4                   		movw	hl, r12
 112 0099 8B                      		mov	a, [hl]
 113 009a 9D F2                   		mov	r10, a
 114 009c 5A F2 FB                		and	r10, #-5
 115 009f AD F0                   		movw	ax, r8
 116 00a1 BD F4                   		movw	r12, ax
 117 00a3 FA F4                   		movw	hl, r12
 118 00a5 8D F2                   		mov	a, r10
 119 00a7 9B                      		mov	[hl], a
  73:../src/r_cg_intc.c ****     PM3 |= 0x02U;
 120                             		.loc 1 73 0
 121 00a8 C9 F0 23 FF             		movw	r8, #-221
 122 00ac C9 F2 23 FF             		movw	r10, #-221
 123 00b0 AD F2                   		movw	ax, r10
 124 00b2 BD F4                   		movw	r12, ax
 125 00b4 FA F4                   		movw	hl, r12
 126 00b6 8B                      		mov	a, [hl]
 127 00b7 9D F2                   		mov	r10, a
 128 00b9 6A F2 02                		or	r10, #2
 129 00bc AD F0                   		movw	ax, r8
 130 00be BD F4                   		movw	r12, ax
 131 00c0 FA F4                   		movw	hl, r12
 132 00c2 8D F2                   		mov	a, r10
 133 00c4 9B                      		mov	[hl], a
  74:../src/r_cg_intc.c ****     
  75:../src/r_cg_intc.c ****     /* Set INTP4 pin */
  76:../src/r_cg_intc.c ****     PFSEG2 &= 0xFDU;
 134                             		.loc 1 76 0
 135 00c5 C9 F0 02 03             		movw	r8, #770
 136 00c9 C9 F2 02 03             		movw	r10, #770
 137 00cd AD F2                   		movw	ax, r10
 138 00cf BD F4                   		movw	r12, ax
 139 00d1 FA F4                   		movw	hl, r12
 140 00d3 8B                      		mov	a, [hl]
 141 00d4 9D F2                   		mov	r10, a
 142 00d6 5A F2 FD                		and	r10, #-3
 143 00d9 AD F0                   		movw	ax, r8
 144 00db BD F4                   		movw	r12, ax
 145 00dd FA F4                   		movw	hl, r12
 146 00df 8D F2                   		mov	a, r10
 147 00e1 9B                      		mov	[hl], a
  77:../src/r_cg_intc.c ****     PM3 |= 0x04U;
 148                             		.loc 1 77 0
 149 00e2 C9 F0 23 FF             		movw	r8, #-221
 150 00e6 C9 F2 23 FF             		movw	r10, #-221
 151 00ea AD F2                   		movw	ax, r10
 152 00ec BD F4                   		movw	r12, ax
 153 00ee FA F4                   		movw	hl, r12
 154 00f0 8B                      		mov	a, [hl]
 155 00f1 9D F2                   		mov	r10, a
 156 00f3 6A F2 04                		or	r10, #4
 157 00f6 AD F0                   		movw	ax, r8
 158 00f8 BD F4                   		movw	r12, ax
 159 00fa FA F4                   		movw	hl, r12
 160 00fc 8D F2                   		mov	a, r10
 161 00fe 9B                      		mov	[hl], a
  78:../src/r_cg_intc.c **** }
 162                             		.loc 1 78 0
 163 00ff D7                      		ret
 164                             	.LFE0:
 166                             		.global	_R_INTC0_Start
 168                             	_R_INTC0_Start:
 169                             	.LFB1:
  79:../src/r_cg_intc.c **** /**************************************************************************************************
  80:../src/r_cg_intc.c **** * End of function R_INTC_Create
  81:../src/r_cg_intc.c **** ***************************************************************************************************
  82:../src/r_cg_intc.c **** 
  83:../src/r_cg_intc.c **** /**************************************************************************************************
  84:../src/r_cg_intc.c **** * Function Name: R_INTC0_Start
  85:../src/r_cg_intc.c **** * Description  : This function clears INTP0 interrupt flag and enables interrupt.
  86:../src/r_cg_intc.c **** * Arguments    : None
  87:../src/r_cg_intc.c **** * Return Value : None
  88:../src/r_cg_intc.c **** ***************************************************************************************************
  89:../src/r_cg_intc.c **** void R_INTC0_Start (void)
  90:../src/r_cg_intc.c **** {
 170                             		.loc 1 90 0
  91:../src/r_cg_intc.c ****     /* clear INTP0 interrupt flag */
  92:../src/r_cg_intc.c ****     PIF0 = 0U;
 171                             		.loc 1 92 0
 172 0100 C9 F0 E0 FF             		movw	r8, #-32
 173 0104 AD F0                   		movw	ax, r8
 174 0106 BD F4                   		movw	r12, ax
 175 0108 FA F4                   		movw	hl, r12
 176 010a 8B                      		mov	a, [hl]
 177 010b 9D F2                   		mov	r10, a
 178 010d 5A F2 FB                		and	r10, #-5
 179 0110 AD F0                   		movw	ax, r8
 180 0112 8D F2                   		mov	a, r10
 181 0114 9B                      		mov	[hl], a
  93:../src/r_cg_intc.c ****     
  94:../src/r_cg_intc.c ****     /* enable INTP4 interrupt */
  95:../src/r_cg_intc.c ****     PMK0 = 0U;
 182                             		.loc 1 95 0
 183 0115 C9 F0 E4 FF             		movw	r8, #-28
 184 0119 AD F0                   		movw	ax, r8
 185 011b BD F4                   		movw	r12, ax
 186 011d FA F4                   		movw	hl, r12
 187 011f 8B                      		mov	a, [hl]
 188 0120 9D F2                   		mov	r10, a
 189 0122 5A F2 FB                		and	r10, #-5
 190 0125 AD F0                   		movw	ax, r8
 191 0127 8D F2                   		mov	a, r10
 192 0129 9B                      		mov	[hl], a
  96:../src/r_cg_intc.c **** }
 193                             		.loc 1 96 0
 194 012a D7                      		ret
 195                             	.LFE1:
 197                             		.global	_R_INTC0_Stop
 199                             	_R_INTC0_Stop:
 200                             	.LFB2:
  97:../src/r_cg_intc.c **** /**************************************************************************************************
  98:../src/r_cg_intc.c **** * End of function R_INTC0_Start
  99:../src/r_cg_intc.c **** ***************************************************************************************************
 100:../src/r_cg_intc.c **** 
 101:../src/r_cg_intc.c **** /**************************************************************************************************
 102:../src/r_cg_intc.c **** * Function Name: R_INTC0_Stop
 103:../src/r_cg_intc.c **** * Description  : This function disables INTP0 interrupt and clears interrupt flag.
 104:../src/r_cg_intc.c **** * Arguments    : None
 105:../src/r_cg_intc.c **** * Return Value : None
 106:../src/r_cg_intc.c **** ***************************************************************************************************
 107:../src/r_cg_intc.c **** void R_INTC0_Stop (void)
 108:../src/r_cg_intc.c **** {
 201                             		.loc 1 108 0
 109:../src/r_cg_intc.c ****     /* disable INTP0 interrupt */
 110:../src/r_cg_intc.c ****     PMK0 = 1U;
 202                             		.loc 1 110 0
 203 012b C9 F0 E4 FF             		movw	r8, #-28
 204 012f AD F0                   		movw	ax, r8
 205 0131 BD F4                   		movw	r12, ax
 206 0133 FA F4                   		movw	hl, r12
 207 0135 8B                      		mov	a, [hl]
 208 0136 9D F2                   		mov	r10, a
 209 0138 6A F2 04                		or	r10, #4
 210 013b AD F0                   		movw	ax, r8
 211 013d 8D F2                   		mov	a, r10
 212 013f 9B                      		mov	[hl], a
 111:../src/r_cg_intc.c ****     
 112:../src/r_cg_intc.c ****     /* clear INTP0 interrupt flag */
 113:../src/r_cg_intc.c ****     PIF0 = 0U;
 213                             		.loc 1 113 0
 214 0140 C9 F0 E0 FF             		movw	r8, #-32
 215 0144 AD F0                   		movw	ax, r8
 216 0146 BD F4                   		movw	r12, ax
 217 0148 FA F4                   		movw	hl, r12
 218 014a 8B                      		mov	a, [hl]
 219 014b 9D F2                   		mov	r10, a
 220 014d 5A F2 FB                		and	r10, #-5
 221 0150 AD F0                   		movw	ax, r8
 222 0152 8D F2                   		mov	a, r10
 223 0154 9B                      		mov	[hl], a
 114:../src/r_cg_intc.c **** }
 224                             		.loc 1 114 0
 225 0155 D7                      		ret
 226                             	.LFE2:
 228                             		.global	_R_INTC3_Start
 230                             	_R_INTC3_Start:
 231                             	.LFB3:
 115:../src/r_cg_intc.c **** /**************************************************************************************************
 116:../src/r_cg_intc.c **** * End of function R_INTC0_Stop
 117:../src/r_cg_intc.c **** ***************************************************************************************************
 118:../src/r_cg_intc.c **** 
 119:../src/r_cg_intc.c **** /**************************************************************************************************
 120:../src/r_cg_intc.c **** * Function Name: R_INTC3_Start
 121:../src/r_cg_intc.c **** * Description  : This function clears INTP3 interrupt flag and enables interrupt.
 122:../src/r_cg_intc.c **** * Arguments    : None
 123:../src/r_cg_intc.c **** * Return Value : None
 124:../src/r_cg_intc.c **** ***************************************************************************************************
 125:../src/r_cg_intc.c **** void R_INTC3_Start (void)
 126:../src/r_cg_intc.c **** {
 232                             		.loc 1 126 0
 127:../src/r_cg_intc.c ****     /* clear INTP3 interrupt flag */
 128:../src/r_cg_intc.c ****     PIF3 = 0U;
 233                             		.loc 1 128 0
 234 0156 C9 F0 E0 FF             		movw	r8, #-32
 235 015a AD F0                   		movw	ax, r8
 236 015c BD F4                   		movw	r12, ax
 237 015e FA F4                   		movw	hl, r12
 238 0160 8B                      		mov	a, [hl]
 239 0161 9D F2                   		mov	r10, a
 240 0163 5A F2 DF                		and	r10, #-33
 241 0166 AD F0                   		movw	ax, r8
 242 0168 8D F2                   		mov	a, r10
 243 016a 9B                      		mov	[hl], a
 129:../src/r_cg_intc.c ****     
 130:../src/r_cg_intc.c ****     /* enable INTP3 interrupt */
 131:../src/r_cg_intc.c ****     PMK3 = 0U;
 244                             		.loc 1 131 0
 245 016b C9 F0 E4 FF             		movw	r8, #-28
 246 016f AD F0                   		movw	ax, r8
 247 0171 BD F4                   		movw	r12, ax
 248 0173 FA F4                   		movw	hl, r12
 249 0175 8B                      		mov	a, [hl]
 250 0176 9D F2                   		mov	r10, a
 251 0178 5A F2 DF                		and	r10, #-33
 252 017b AD F0                   		movw	ax, r8
 253 017d 8D F2                   		mov	a, r10
 254 017f 9B                      		mov	[hl], a
 132:../src/r_cg_intc.c **** }
 255                             		.loc 1 132 0
 256 0180 D7                      		ret
 257                             	.LFE3:
 259                             		.global	_R_INTC3_Stop
 261                             	_R_INTC3_Stop:
 262                             	.LFB4:
 133:../src/r_cg_intc.c **** /**************************************************************************************************
 134:../src/r_cg_intc.c **** * End of function R_INTC3_Start
 135:../src/r_cg_intc.c **** ***************************************************************************************************
 136:../src/r_cg_intc.c **** 
 137:../src/r_cg_intc.c **** /**************************************************************************************************
 138:../src/r_cg_intc.c **** * Function Name: R_INTC3_Stop
 139:../src/r_cg_intc.c **** * Description  : This function disables INTP3 interrupt and clears interrupt flag.
 140:../src/r_cg_intc.c **** * Arguments    : None
 141:../src/r_cg_intc.c **** * Return Value : None
 142:../src/r_cg_intc.c **** ***************************************************************************************************
 143:../src/r_cg_intc.c **** void R_INTC3_Stop (void)
 144:../src/r_cg_intc.c **** {
 263                             		.loc 1 144 0
 145:../src/r_cg_intc.c ****     /* disable INTP3 interrupt */
 146:../src/r_cg_intc.c ****     PMK3 = 1U;
 264                             		.loc 1 146 0
 265 0181 C9 F0 E4 FF             		movw	r8, #-28
 266 0185 AD F0                   		movw	ax, r8
 267 0187 BD F4                   		movw	r12, ax
 268 0189 FA F4                   		movw	hl, r12
 269 018b 8B                      		mov	a, [hl]
 270 018c 9D F2                   		mov	r10, a
 271 018e 6A F2 20                		or	r10, #32
 272 0191 AD F0                   		movw	ax, r8
 273 0193 8D F2                   		mov	a, r10
 274 0195 9B                      		mov	[hl], a
 147:../src/r_cg_intc.c ****     
 148:../src/r_cg_intc.c ****     /* clear INTP3 interrupt flag */
 149:../src/r_cg_intc.c ****     PIF3 = 0U;
 275                             		.loc 1 149 0
 276 0196 C9 F0 E0 FF             		movw	r8, #-32
 277 019a AD F0                   		movw	ax, r8
 278 019c BD F4                   		movw	r12, ax
 279 019e FA F4                   		movw	hl, r12
 280 01a0 8B                      		mov	a, [hl]
 281 01a1 9D F2                   		mov	r10, a
 282 01a3 5A F2 DF                		and	r10, #-33
 283 01a6 AD F0                   		movw	ax, r8
 284 01a8 8D F2                   		mov	a, r10
 285 01aa 9B                      		mov	[hl], a
 150:../src/r_cg_intc.c **** }
 286                             		.loc 1 150 0
 287 01ab D7                      		ret
 288                             	.LFE4:
 290                             		.global	_R_INTC4_Start
 292                             	_R_INTC4_Start:
 293                             	.LFB5:
 151:../src/r_cg_intc.c **** /**************************************************************************************************
 152:../src/r_cg_intc.c **** * End of function R_INTC3_Stop
 153:../src/r_cg_intc.c **** ***************************************************************************************************
 154:../src/r_cg_intc.c **** 
 155:../src/r_cg_intc.c **** /**************************************************************************************************
 156:../src/r_cg_intc.c **** * Function Name: R_INTC4_Start
 157:../src/r_cg_intc.c **** * Description  : This function clears INTP4 interrupt flag and enables interrupt.
 158:../src/r_cg_intc.c **** * Arguments    : None
 159:../src/r_cg_intc.c **** * Return Value : None
 160:../src/r_cg_intc.c **** ***************************************************************************************************
 161:../src/r_cg_intc.c **** void R_INTC4_Start (void)
 162:../src/r_cg_intc.c **** {
 294                             		.loc 1 162 0
 163:../src/r_cg_intc.c ****     /* clear INTP4 interrupt flag */
 164:../src/r_cg_intc.c ****     PIF4 = 0U;
 295                             		.loc 1 164 0
 296 01ac C9 F0 E0 FF             		movw	r8, #-32
 297 01b0 AD F0                   		movw	ax, r8
 298 01b2 BD F4                   		movw	r12, ax
 299 01b4 FA F4                   		movw	hl, r12
 300 01b6 8B                      		mov	a, [hl]
 301 01b7 9D F2                   		mov	r10, a
 302 01b9 5A F2 BF                		and	r10, #-65
 303 01bc AD F0                   		movw	ax, r8
 304 01be 8D F2                   		mov	a, r10
 305 01c0 9B                      		mov	[hl], a
 165:../src/r_cg_intc.c ****     
 166:../src/r_cg_intc.c ****     /* enable INTP4 interrupt */
 167:../src/r_cg_intc.c ****     PMK4 = 0U;
 306                             		.loc 1 167 0
 307 01c1 C9 F0 E4 FF             		movw	r8, #-28
 308 01c5 AD F0                   		movw	ax, r8
 309 01c7 BD F4                   		movw	r12, ax
 310 01c9 FA F4                   		movw	hl, r12
 311 01cb 8B                      		mov	a, [hl]
 312 01cc 9D F2                   		mov	r10, a
 313 01ce 5A F2 BF                		and	r10, #-65
 314 01d1 AD F0                   		movw	ax, r8
 315 01d3 8D F2                   		mov	a, r10
 316 01d5 9B                      		mov	[hl], a
 168:../src/r_cg_intc.c **** }
 317                             		.loc 1 168 0
 318 01d6 D7                      		ret
 319                             	.LFE5:
 321                             		.global	_R_INTC4_Stop
 323                             	_R_INTC4_Stop:
 324                             	.LFB6:
 169:../src/r_cg_intc.c **** /**************************************************************************************************
 170:../src/r_cg_intc.c **** * End of function R_INTC4_Start
 171:../src/r_cg_intc.c **** ***************************************************************************************************
 172:../src/r_cg_intc.c **** 
 173:../src/r_cg_intc.c **** /**************************************************************************************************
 174:../src/r_cg_intc.c **** * Function Name: R_INTC4_Stop
 175:../src/r_cg_intc.c **** * Description  : This function disables INTP4 interrupt and clears interrupt flag.
 176:../src/r_cg_intc.c **** * Arguments    : None
 177:../src/r_cg_intc.c **** * Return Value : None
 178:../src/r_cg_intc.c **** ***************************************************************************************************
 179:../src/r_cg_intc.c **** void R_INTC4_Stop (void)
 180:../src/r_cg_intc.c **** {
 325                             		.loc 1 180 0
 181:../src/r_cg_intc.c ****     /* disable INTP4 interrupt */
 182:../src/r_cg_intc.c ****     PMK4 = 1U;
 326                             		.loc 1 182 0
 327 01d7 C9 F0 E4 FF             		movw	r8, #-28
 328 01db AD F0                   		movw	ax, r8
 329 01dd BD F4                   		movw	r12, ax
 330 01df FA F4                   		movw	hl, r12
 331 01e1 8B                      		mov	a, [hl]
 332 01e2 9D F2                   		mov	r10, a
 333 01e4 6A F2 40                		or	r10, #64
 334 01e7 AD F0                   		movw	ax, r8
 335 01e9 8D F2                   		mov	a, r10
 336 01eb 9B                      		mov	[hl], a
 183:../src/r_cg_intc.c ****     
 184:../src/r_cg_intc.c ****     /* clear INTP4 interrupt flag */
 185:../src/r_cg_intc.c ****     PIF4 = 0U;
 337                             		.loc 1 185 0
 338 01ec C9 F0 E0 FF             		movw	r8, #-32
 339 01f0 AD F0                   		movw	ax, r8
 340 01f2 BD F4                   		movw	r12, ax
 341 01f4 FA F4                   		movw	hl, r12
 342 01f6 8B                      		mov	a, [hl]
 343 01f7 9D F2                   		mov	r10, a
 344 01f9 5A F2 BF                		and	r10, #-65
 345 01fc AD F0                   		movw	ax, r8
 346 01fe 8D F2                   		mov	a, r10
 347 0200 9B                      		mov	[hl], a
 186:../src/r_cg_intc.c **** }
 348                             		.loc 1 186 0
 349 0201 D7                      		ret
 350                             	.LFE6:
 426                             	.Letext0:
 427                             		.file 2 "../src/iodefine.h"
 428                             		.file 3 "../src/iodefine_ext.h"
