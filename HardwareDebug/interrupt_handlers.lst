   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_INT_WDTI
  29                             	_INT_WDTI:
  30                             	.LFB0:
  31                             		.file 1 "../src/interrupt_handlers.c"
   1:../src/interrupt_handlers.c **** /**************************************************************************************************
   2:../src/interrupt_handlers.c **** * DISCLAIMER
   3:../src/interrupt_handlers.c **** * This software is supplied by Renesas Electronics Corporation and is only 
   4:../src/interrupt_handlers.c **** * intended for use with Renesas products. No other uses are authorized. This 
   5:../src/interrupt_handlers.c **** * software is owned by Renesas Electronics Corporation and is protected under 
   6:../src/interrupt_handlers.c **** * all applicable laws, including copyright laws.
   7:../src/interrupt_handlers.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING 
   8:../src/interrupt_handlers.c **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT 
   9:../src/interrupt_handlers.c **** * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
  10:../src/interrupt_handlers.c **** * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
  11:../src/interrupt_handlers.c **** * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
  12:../src/interrupt_handlers.c **** * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  13:../src/interrupt_handlers.c **** * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR 
  14:../src/interrupt_handlers.c **** * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE 
  15:../src/interrupt_handlers.c **** * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  16:../src/interrupt_handlers.c **** * Renesas reserves the right, without notice, to make changes to this software 
  17:../src/interrupt_handlers.c **** * and to discontinue the availability of this software.  By using this software, 
  18:../src/interrupt_handlers.c **** * you agree to the additional terms and conditions found by accessing the 
  19:../src/interrupt_handlers.c **** * following link:
  20:../src/interrupt_handlers.c **** * http://www.renesas.com/disclaimer
  21:../src/interrupt_handlers.c **** *
  22:../src/interrupt_handlers.c **** * Copyright (C) 2012 Renesas Electronics Corporation. All rights reserved.
  23:../src/interrupt_handlers.c **** ***************************************************************************************************
  24:../src/interrupt_handlers.c **** 
  25:../src/interrupt_handlers.c **** /**************************************************************************************************
  26:../src/interrupt_handlers.c **** * File Name    : interrupt_handlers.c
  27:../src/interrupt_handlers.c **** * Version      : 1.00
  28:../src/interrupt_handlers.c **** * Device(s)    : R5F10RLC
  29:../src/interrupt_handlers.c **** * Tool-Chain   : GNURL78 v12.03
  30:../src/interrupt_handlers.c **** * Description  : This file contains the interrupt handlers.
  31:../src/interrupt_handlers.c **** * 				 This file was generated by e2studio.
  32:../src/interrupt_handlers.c **** * Creation Date: 21/01/2013
  33:../src/interrupt_handlers.c **** ***************************************************************************************************
  34:../src/interrupt_handlers.c **** 
  35:../src/interrupt_handlers.c **** /* Header file includes the attributes directive to
  36:../src/interrupt_handlers.c ****    ensure the functions are defined as interrupt handlers */
  37:../src/interrupt_handlers.c **** #include "interrupt_handlers.h"
  38:../src/interrupt_handlers.c **** 
  39:../src/interrupt_handlers.c **** /*
  40:../src/interrupt_handlers.c ****  * INT_WDTI (0x4)
  41:../src/interrupt_handlers.c ****  */
  42:../src/interrupt_handlers.c **** void INT_WDTI (void) { }
  32                             		.loc 1 42 0
  33                             		; start of function
  34                             		; push 8: ax bc de hl
  35 0000 61 CF                   		sel	rb0
  36 0002 C1                      		push	ax
  37                             	.LCFI0:
  38 0003 C3                      		push	bc
  39                             	.LCFI1:
  40 0004 C5                      		push	de
  41                             	.LCFI2:
  42 0005 C7                      		push	hl
  43                             	.LCFI3:
  44                             		.loc 1 42 0
  45 0006 C6                      		pop	hl
  46 0007 C4                      		pop	de
  47 0008 C2                      		pop	bc
  48 0009 C0                      		pop	ax
  49 000a 61 FC                   		reti
  50                             	.LFE0:
  52                             		.global	_INT_LVI
  54                             	_INT_LVI:
  55                             	.LFB1:
  43:../src/interrupt_handlers.c **** 
  44:../src/interrupt_handlers.c **** /*
  45:../src/interrupt_handlers.c ****  * INT_LVI (0x6)
  46:../src/interrupt_handlers.c ****  */
  47:../src/interrupt_handlers.c **** void INT_LVI (void) { }
  56                             		.loc 1 47 0
  57                             		; start of function
  58                             		; push 8: ax bc de hl
  59 000c 61 CF                   		sel	rb0
  60 000e C1                      		push	ax
  61                             	.LCFI4:
  62 000f C3                      		push	bc
  63                             	.LCFI5:
  64 0010 C5                      		push	de
  65                             	.LCFI6:
  66 0011 C7                      		push	hl
  67                             	.LCFI7:
  68                             		.loc 1 47 0
  69 0012 C6                      		pop	hl
  70 0013 C4                      		pop	de
  71 0014 C2                      		pop	bc
  72 0015 C0                      		pop	ax
  73 0016 61 FC                   		reti
  74                             	.LFE1:
  76                             		.global	_INT_P1
  78                             	_INT_P1:
  79                             	.LFB2:
  48:../src/interrupt_handlers.c **** 
  49:../src/interrupt_handlers.c **** /*
  50:../src/interrupt_handlers.c ****  * INT_P0 (0x8)
  51:../src/interrupt_handlers.c ****  */
  52:../src/interrupt_handlers.c **** //void INT_P0 (void) { }
  53:../src/interrupt_handlers.c **** 
  54:../src/interrupt_handlers.c **** /*
  55:../src/interrupt_handlers.c ****  * INT_P1 (0xA)
  56:../src/interrupt_handlers.c ****  */
  57:../src/interrupt_handlers.c **** void INT_P1 (void) { }
  80                             		.loc 1 57 0
  81                             		; start of function
  82                             		; push 8: ax bc de hl
  83 0018 61 CF                   		sel	rb0
  84 001a C1                      		push	ax
  85                             	.LCFI8:
  86 001b C3                      		push	bc
  87                             	.LCFI9:
  88 001c C5                      		push	de
  89                             	.LCFI10:
  90 001d C7                      		push	hl
  91                             	.LCFI11:
  92                             		.loc 1 57 0
  93 001e C6                      		pop	hl
  94 001f C4                      		pop	de
  95 0020 C2                      		pop	bc
  96 0021 C0                      		pop	ax
  97 0022 61 FC                   		reti
  98                             	.LFE2:
 100                             		.global	_INT_P2
 102                             	_INT_P2:
 103                             	.LFB3:
  58:../src/interrupt_handlers.c **** 
  59:../src/interrupt_handlers.c **** /*
  60:../src/interrupt_handlers.c ****  * INT_P2 (0xC)
  61:../src/interrupt_handlers.c ****  */
  62:../src/interrupt_handlers.c **** void INT_P2 (void) { }
 104                             		.loc 1 62 0
 105                             		; start of function
 106                             		; push 8: ax bc de hl
 107 0024 61 CF                   		sel	rb0
 108 0026 C1                      		push	ax
 109                             	.LCFI12:
 110 0027 C3                      		push	bc
 111                             	.LCFI13:
 112 0028 C5                      		push	de
 113                             	.LCFI14:
 114 0029 C7                      		push	hl
 115                             	.LCFI15:
 116                             		.loc 1 62 0
 117 002a C6                      		pop	hl
 118 002b C4                      		pop	de
 119 002c C2                      		pop	bc
 120 002d C0                      		pop	ax
 121 002e 61 FC                   		reti
 122                             	.LFE3:
 124                             		.global	_INT_P5
 126                             	_INT_P5:
 127                             	.LFB4:
  63:../src/interrupt_handlers.c **** 
  64:../src/interrupt_handlers.c **** /*
  65:../src/interrupt_handlers.c ****  * INT_P3 (0xE)
  66:../src/interrupt_handlers.c ****  */
  67:../src/interrupt_handlers.c **** //void INT_P3 (void) { }
  68:../src/interrupt_handlers.c **** 
  69:../src/interrupt_handlers.c **** /*
  70:../src/interrupt_handlers.c ****  * INT_P4 (0x10)
  71:../src/interrupt_handlers.c ****  */
  72:../src/interrupt_handlers.c **** //void INT_P4 (void) { }
  73:../src/interrupt_handlers.c **** 
  74:../src/interrupt_handlers.c **** /*
  75:../src/interrupt_handlers.c ****  * INT_P5 (0x12)
  76:../src/interrupt_handlers.c ****  */
  77:../src/interrupt_handlers.c **** void INT_P5 (void) { }
 128                             		.loc 1 77 0
 129                             		; start of function
 130                             		; push 8: ax bc de hl
 131 0030 61 CF                   		sel	rb0
 132 0032 C1                      		push	ax
 133                             	.LCFI16:
 134 0033 C3                      		push	bc
 135                             	.LCFI17:
 136 0034 C5                      		push	de
 137                             	.LCFI18:
 138 0035 C7                      		push	hl
 139                             	.LCFI19:
 140                             		.loc 1 77 0
 141 0036 C6                      		pop	hl
 142 0037 C4                      		pop	de
 143 0038 C2                      		pop	bc
 144 0039 C0                      		pop	ax
 145 003a 61 FC                   		reti
 146                             	.LFE4:
 148                             		.global	_INT_DMA0
 150                             	_INT_DMA0:
 151                             	.LFB5:
  78:../src/interrupt_handlers.c **** 
  79:../src/interrupt_handlers.c **** /*
  80:../src/interrupt_handlers.c ****  * INT_DMA0 (0x14)
  81:../src/interrupt_handlers.c ****  */
  82:../src/interrupt_handlers.c **** void INT_DMA0 (void) { }
 152                             		.loc 1 82 0
 153                             		; start of function
 154                             		; push 8: ax bc de hl
 155 003c 61 CF                   		sel	rb0
 156 003e C1                      		push	ax
 157                             	.LCFI20:
 158 003f C3                      		push	bc
 159                             	.LCFI21:
 160 0040 C5                      		push	de
 161                             	.LCFI22:
 162 0041 C7                      		push	hl
 163                             	.LCFI23:
 164                             		.loc 1 82 0
 165 0042 C6                      		pop	hl
 166 0043 C4                      		pop	de
 167 0044 C2                      		pop	bc
 168 0045 C0                      		pop	ax
 169 0046 61 FC                   		reti
 170                             	.LFE5:
 172                             		.global	_INT_DMA1
 174                             	_INT_DMA1:
 175                             	.LFB6:
  83:../src/interrupt_handlers.c **** 
  84:../src/interrupt_handlers.c **** /*
  85:../src/interrupt_handlers.c ****  * INT_DMA1 (0x16)
  86:../src/interrupt_handlers.c ****  */
  87:../src/interrupt_handlers.c **** void INT_DMA1 (void) { }
 176                             		.loc 1 87 0
 177                             		; start of function
 178                             		; push 8: ax bc de hl
 179 0048 61 CF                   		sel	rb0
 180 004a C1                      		push	ax
 181                             	.LCFI24:
 182 004b C3                      		push	bc
 183                             	.LCFI25:
 184 004c C5                      		push	de
 185                             	.LCFI26:
 186 004d C7                      		push	hl
 187                             	.LCFI27:
 188                             		.loc 1 87 0
 189 004e C6                      		pop	hl
 190 004f C4                      		pop	de
 191 0050 C2                      		pop	bc
 192 0051 C0                      		pop	ax
 193 0052 61 FC                   		reti
 194                             	.LFE6:
 196                             		.global	_INT_TM03H
 198                             	_INT_TM03H:
 199                             	.LFB7:
  88:../src/interrupt_handlers.c **** 
  89:../src/interrupt_handlers.c **** /*
  90:../src/interrupt_handlers.c ****  * INT_CSI00/INT_ST0 (0x18)
  91:../src/interrupt_handlers.c ****  */
  92:../src/interrupt_handlers.c **** //void INT_ST0 (void) { }
  93:../src/interrupt_handlers.c **** //void INT_CSI00 (void) { }
  94:../src/interrupt_handlers.c **** 
  95:../src/interrupt_handlers.c **** /*
  96:../src/interrupt_handlers.c ****  * INT_CSI01/INT_SR0 (0x1A)
  97:../src/interrupt_handlers.c ****  */
  98:../src/interrupt_handlers.c **** //void INT_SR0 (void) { }
  99:../src/interrupt_handlers.c **** //void INT_CSI01 (void) { }
 100:../src/interrupt_handlers.c **** 
 101:../src/interrupt_handlers.c **** /*
 102:../src/interrupt_handlers.c ****  * INT_SRE0/INT_TM01H (0x1C)
 103:../src/interrupt_handlers.c ****  */
 104:../src/interrupt_handlers.c **** //void INT_TM01H (void) { }
 105:../src/interrupt_handlers.c **** //void INT_SRE0 (void) { }
 106:../src/interrupt_handlers.c **** 
 107:../src/interrupt_handlers.c **** /*
 108:../src/interrupt_handlers.c ****  * INT_TM00 (0x20)
 109:../src/interrupt_handlers.c ****  */
 110:../src/interrupt_handlers.c **** //void INT_TM00 (void) { }
 111:../src/interrupt_handlers.c **** 
 112:../src/interrupt_handlers.c **** /*
 113:../src/interrupt_handlers.c ****  * INT_TM03H (0x24)
 114:../src/interrupt_handlers.c ****  */
 115:../src/interrupt_handlers.c **** void INT_TM03H (void) { }
 200                             		.loc 1 115 0
 201                             		; start of function
 202                             		; push 8: ax bc de hl
 203 0054 61 CF                   		sel	rb0
 204 0056 C1                      		push	ax
 205                             	.LCFI28:
 206 0057 C3                      		push	bc
 207                             	.LCFI29:
 208 0058 C5                      		push	de
 209                             	.LCFI30:
 210 0059 C7                      		push	hl
 211                             	.LCFI31:
 212                             		.loc 1 115 0
 213 005a C6                      		pop	hl
 214 005b C4                      		pop	de
 215 005c C2                      		pop	bc
 216 005d C0                      		pop	ax
 217 005e 61 FC                   		reti
 218                             	.LFE7:
 220                             		.global	_INT_IICA0
 222                             	_INT_IICA0:
 223                             	.LFB8:
 116:../src/interrupt_handlers.c **** 
 117:../src/interrupt_handlers.c **** /*
 118:../src/interrupt_handlers.c ****  * INT_IICA0 (0x26)
 119:../src/interrupt_handlers.c ****  */
 120:../src/interrupt_handlers.c **** void INT_IICA0 (void) { }
 224                             		.loc 1 120 0
 225                             		; start of function
 226                             		; push 8: ax bc de hl
 227 0060 61 CF                   		sel	rb0
 228 0062 C1                      		push	ax
 229                             	.LCFI32:
 230 0063 C3                      		push	bc
 231                             	.LCFI33:
 232 0064 C5                      		push	de
 233                             	.LCFI34:
 234 0065 C7                      		push	hl
 235                             	.LCFI35:
 236                             		.loc 1 120 0
 237 0066 C6                      		pop	hl
 238 0067 C4                      		pop	de
 239 0068 C2                      		pop	bc
 240 0069 C0                      		pop	ax
 241 006a 61 FC                   		reti
 242                             	.LFE8:
 244                             		.global	_INT_TM01
 246                             	_INT_TM01:
 247                             	.LFB9:
 121:../src/interrupt_handlers.c **** 
 122:../src/interrupt_handlers.c **** /*
 123:../src/interrupt_handlers.c ****  * INT_TM01 (0x28)
 124:../src/interrupt_handlers.c ****  */
 125:../src/interrupt_handlers.c **** void INT_TM01 (void) { }
 248                             		.loc 1 125 0
 249                             		; start of function
 250                             		; push 8: ax bc de hl
 251 006c 61 CF                   		sel	rb0
 252 006e C1                      		push	ax
 253                             	.LCFI36:
 254 006f C3                      		push	bc
 255                             	.LCFI37:
 256 0070 C5                      		push	de
 257                             	.LCFI38:
 258 0071 C7                      		push	hl
 259                             	.LCFI39:
 260                             		.loc 1 125 0
 261 0072 C6                      		pop	hl
 262 0073 C4                      		pop	de
 263 0074 C2                      		pop	bc
 264 0075 C0                      		pop	ax
 265 0076 61 FC                   		reti
 266                             	.LFE9:
 268                             		.global	_INT_TM03
 270                             	_INT_TM03:
 271                             	.LFB10:
 126:../src/interrupt_handlers.c **** 
 127:../src/interrupt_handlers.c **** /*
 128:../src/interrupt_handlers.c ****  * INT_TM02 (0x2A)
 129:../src/interrupt_handlers.c ****  */
 130:../src/interrupt_handlers.c **** //void INT_TM02 (void) { }
 131:../src/interrupt_handlers.c **** 
 132:../src/interrupt_handlers.c **** /*
 133:../src/interrupt_handlers.c ****  * INT_TM03 (0x2C)
 134:../src/interrupt_handlers.c ****  */
 135:../src/interrupt_handlers.c **** void INT_TM03 (void) { }
 272                             		.loc 1 135 0
 273                             		; start of function
 274                             		; push 8: ax bc de hl
 275 0078 61 CF                   		sel	rb0
 276 007a C1                      		push	ax
 277                             	.LCFI40:
 278 007b C3                      		push	bc
 279                             	.LCFI41:
 280 007c C5                      		push	de
 281                             	.LCFI42:
 282 007d C7                      		push	hl
 283                             	.LCFI43:
 284                             		.loc 1 135 0
 285 007e C6                      		pop	hl
 286 007f C4                      		pop	de
 287 0080 C2                      		pop	bc
 288 0081 C0                      		pop	ax
 289 0082 61 FC                   		reti
 290                             	.LFE10:
 292                             		.global	_INT_KR
 294                             	_INT_KR:
 295                             	.LFB11:
 136:../src/interrupt_handlers.c **** 
 137:../src/interrupt_handlers.c **** /*
 138:../src/interrupt_handlers.c ****  * INT_AD (0x2E)
 139:../src/interrupt_handlers.c ****  */
 140:../src/interrupt_handlers.c **** //void INT_AD (void) { }
 141:../src/interrupt_handlers.c **** 
 142:../src/interrupt_handlers.c **** /*
 143:../src/interrupt_handlers.c ****  * INT_RTC (0x30)
 144:../src/interrupt_handlers.c ****  */
 145:../src/interrupt_handlers.c **** //void INT_RTC (void) { }
 146:../src/interrupt_handlers.c **** 
 147:../src/interrupt_handlers.c **** /*
 148:../src/interrupt_handlers.c ****  * INT_IT (0x32)
 149:../src/interrupt_handlers.c ****  */
 150:../src/interrupt_handlers.c **** //void INT_IT (void) { }
 151:../src/interrupt_handlers.c **** 
 152:../src/interrupt_handlers.c **** /*
 153:../src/interrupt_handlers.c ****  * INT_KR (0x34)
 154:../src/interrupt_handlers.c ****  */
 155:../src/interrupt_handlers.c **** void INT_KR (void) { }
 296                             		.loc 1 155 0
 297                             		; start of function
 298                             		; push 8: ax bc de hl
 299 0084 61 CF                   		sel	rb0
 300 0086 C1                      		push	ax
 301                             	.LCFI44:
 302 0087 C3                      		push	bc
 303                             	.LCFI45:
 304 0088 C5                      		push	de
 305                             	.LCFI46:
 306 0089 C7                      		push	hl
 307                             	.LCFI47:
 308                             		.loc 1 155 0
 309 008a C6                      		pop	hl
 310 008b C4                      		pop	de
 311 008c C2                      		pop	bc
 312 008d C0                      		pop	ax
 313 008e 61 FC                   		reti
 314                             	.LFE11:
 316                             		.global	_INT_TM04
 318                             	_INT_TM04:
 319                             	.LFB12:
 156:../src/interrupt_handlers.c **** 
 157:../src/interrupt_handlers.c **** /*
 158:../src/interrupt_handlers.c ****  * INT_TM04 (0x3C)
 159:../src/interrupt_handlers.c ****  */
 160:../src/interrupt_handlers.c **** void INT_TM04 (void) { }
 320                             		.loc 1 160 0
 321                             		; start of function
 322                             		; push 8: ax bc de hl
 323 0090 61 CF                   		sel	rb0
 324 0092 C1                      		push	ax
 325                             	.LCFI48:
 326 0093 C3                      		push	bc
 327                             	.LCFI49:
 328 0094 C5                      		push	de
 329                             	.LCFI50:
 330 0095 C7                      		push	hl
 331                             	.LCFI51:
 332                             		.loc 1 160 0
 333 0096 C6                      		pop	hl
 334 0097 C4                      		pop	de
 335 0098 C2                      		pop	bc
 336 0099 C0                      		pop	ax
 337 009a 61 FC                   		reti
 338                             	.LFE12:
 340                             		.global	_INT_TM05
 342                             	_INT_TM05:
 343                             	.LFB13:
 161:../src/interrupt_handlers.c **** 
 162:../src/interrupt_handlers.c **** /*
 163:../src/interrupt_handlers.c ****  * INT_TM05 (0x3E)
 164:../src/interrupt_handlers.c ****  */
 165:../src/interrupt_handlers.c **** void INT_TM05 (void) { }
 344                             		.loc 1 165 0
 345                             		; start of function
 346                             		; push 8: ax bc de hl
 347 009c 61 CF                   		sel	rb0
 348 009e C1                      		push	ax
 349                             	.LCFI52:
 350 009f C3                      		push	bc
 351                             	.LCFI53:
 352 00a0 C5                      		push	de
 353                             	.LCFI54:
 354 00a1 C7                      		push	hl
 355                             	.LCFI55:
 356                             		.loc 1 165 0
 357 00a2 C6                      		pop	hl
 358 00a3 C4                      		pop	de
 359 00a4 C2                      		pop	bc
 360 00a5 C0                      		pop	ax
 361 00a6 61 FC                   		reti
 362                             	.LFE13:
 364                             		.global	_INT_TM06
 366                             	_INT_TM06:
 367                             	.LFB14:
 166:../src/interrupt_handlers.c **** 
 167:../src/interrupt_handlers.c **** /*
 168:../src/interrupt_handlers.c ****  * INT_TM06 (0x40)
 169:../src/interrupt_handlers.c ****  */
 170:../src/interrupt_handlers.c **** void INT_TM06 (void) { }
 368                             		.loc 1 170 0
 369                             		; start of function
 370                             		; push 8: ax bc de hl
 371 00a8 61 CF                   		sel	rb0
 372 00aa C1                      		push	ax
 373                             	.LCFI56:
 374 00ab C3                      		push	bc
 375                             	.LCFI57:
 376 00ac C5                      		push	de
 377                             	.LCFI58:
 378 00ad C7                      		push	hl
 379                             	.LCFI59:
 380                             		.loc 1 170 0
 381 00ae C6                      		pop	hl
 382 00af C4                      		pop	de
 383 00b0 C2                      		pop	bc
 384 00b1 C0                      		pop	ax
 385 00b2 61 FC                   		reti
 386                             	.LFE14:
 388                             		.global	_INT_TM07
 390                             	_INT_TM07:
 391                             	.LFB15:
 171:../src/interrupt_handlers.c **** 
 172:../src/interrupt_handlers.c **** /*
 173:../src/interrupt_handlers.c ****  * INT_TM07 (0x42)
 174:../src/interrupt_handlers.c ****  */
 175:../src/interrupt_handlers.c **** void INT_TM07 (void) { }
 392                             		.loc 1 175 0
 393                             		; start of function
 394                             		; push 8: ax bc de hl
 395 00b4 61 CF                   		sel	rb0
 396 00b6 C1                      		push	ax
 397                             	.LCFI60:
 398 00b7 C3                      		push	bc
 399                             	.LCFI61:
 400 00b8 C5                      		push	de
 401                             	.LCFI62:
 402 00b9 C7                      		push	hl
 403                             	.LCFI63:
 404                             		.loc 1 175 0
 405 00ba C6                      		pop	hl
 406 00bb C4                      		pop	de
 407 00bc C2                      		pop	bc
 408 00bd C0                      		pop	ax
 409 00be 61 FC                   		reti
 410                             	.LFE15:
 412                             		.global	_INT_LCD0
 414                             	_INT_LCD0:
 415                             	.LFB16:
 176:../src/interrupt_handlers.c **** 
 177:../src/interrupt_handlers.c **** /*
 178:../src/interrupt_handlers.c ****  * INT_LCD0 (0x44)
 179:../src/interrupt_handlers.c ****  */
 180:../src/interrupt_handlers.c **** void INT_LCD0 (void) { }
 416                             		.loc 1 180 0
 417                             		; start of function
 418                             		; push 8: ax bc de hl
 419 00c0 61 CF                   		sel	rb0
 420 00c2 C1                      		push	ax
 421                             	.LCFI64:
 422 00c3 C3                      		push	bc
 423                             	.LCFI65:
 424 00c4 C5                      		push	de
 425                             	.LCFI66:
 426 00c5 C7                      		push	hl
 427                             	.LCFI67:
 428                             		.loc 1 180 0
 429 00c6 C6                      		pop	hl
 430 00c7 C4                      		pop	de
 431 00c8 C2                      		pop	bc
 432 00c9 C0                      		pop	ax
 433 00ca 61 FC                   		reti
 434                             	.LFE16:
 436                             		.global	_INT_P6
 438                             	_INT_P6:
 439                             	.LFB17:
 181:../src/interrupt_handlers.c **** 
 182:../src/interrupt_handlers.c **** /*
 183:../src/interrupt_handlers.c ****  * INT_P6 (0x46)
 184:../src/interrupt_handlers.c ****  */
 185:../src/interrupt_handlers.c **** void INT_P6 (void) { }
 440                             		.loc 1 185 0
 441                             		; start of function
 442                             		; push 8: ax bc de hl
 443 00cc 61 CF                   		sel	rb0
 444 00ce C1                      		push	ax
 445                             	.LCFI68:
 446 00cf C3                      		push	bc
 447                             	.LCFI69:
 448 00d0 C5                      		push	de
 449                             	.LCFI70:
 450 00d1 C7                      		push	hl
 451                             	.LCFI71:
 452                             		.loc 1 185 0
 453 00d2 C6                      		pop	hl
 454 00d3 C4                      		pop	de
 455 00d4 C2                      		pop	bc
 456 00d5 C0                      		pop	ax
 457 00d6 61 FC                   		reti
 458                             	.LFE17:
 460                             		.global	_INT_P7
 462                             	_INT_P7:
 463                             	.LFB18:
 186:../src/interrupt_handlers.c **** 
 187:../src/interrupt_handlers.c **** /*
 188:../src/interrupt_handlers.c ****  * INT_P7 (0x48)
 189:../src/interrupt_handlers.c ****  */
 190:../src/interrupt_handlers.c **** void INT_P7 (void) { }
 464                             		.loc 1 190 0
 465                             		; start of function
 466                             		; push 8: ax bc de hl
 467 00d8 61 CF                   		sel	rb0
 468 00da C1                      		push	ax
 469                             	.LCFI72:
 470 00db C3                      		push	bc
 471                             	.LCFI73:
 472 00dc C5                      		push	de
 473                             	.LCFI74:
 474 00dd C7                      		push	hl
 475                             	.LCFI75:
 476                             		.loc 1 190 0
 477 00de C6                      		pop	hl
 478 00df C4                      		pop	de
 479 00e0 C2                      		pop	bc
 480 00e1 C0                      		pop	ax
 481 00e2 61 FC                   		reti
 482                             	.LFE18:
 484                             		.global	_INT_MD
 486                             	_INT_MD:
 487                             	.LFB19:
 191:../src/interrupt_handlers.c **** 
 192:../src/interrupt_handlers.c **** /*
 193:../src/interrupt_handlers.c ****  * INT_MD (0x4A)
 194:../src/interrupt_handlers.c ****  */
 195:../src/interrupt_handlers.c **** void INT_MD (void) { }
 488                             		.loc 1 195 0
 489                             		; start of function
 490                             		; push 8: ax bc de hl
 491 00e4 61 CF                   		sel	rb0
 492 00e6 C1                      		push	ax
 493                             	.LCFI76:
 494 00e7 C3                      		push	bc
 495                             	.LCFI77:
 496 00e8 C5                      		push	de
 497                             	.LCFI78:
 498 00e9 C7                      		push	hl
 499                             	.LCFI79:
 500                             		.loc 1 195 0
 501 00ea C6                      		pop	hl
 502 00eb C4                      		pop	de
 503 00ec C2                      		pop	bc
 504 00ed C0                      		pop	ax
 505 00ee 61 FC                   		reti
 506                             	.LFE19:
 508                             		.global	_INT_FL
 510                             	_INT_FL:
 511                             	.LFB20:
 196:../src/interrupt_handlers.c **** 
 197:../src/interrupt_handlers.c **** /*
 198:../src/interrupt_handlers.c ****  * INT_FL (0x4C)
 199:../src/interrupt_handlers.c ****  */
 200:../src/interrupt_handlers.c **** void INT_FL (void) { }
 512                             		.loc 1 200 0
 513                             		; start of function
 514                             		; push 8: ax bc de hl
 515 00f0 61 CF                   		sel	rb0
 516 00f2 C1                      		push	ax
 517                             	.LCFI80:
 518 00f3 C3                      		push	bc
 519                             	.LCFI81:
 520 00f4 C5                      		push	de
 521                             	.LCFI82:
 522 00f5 C7                      		push	hl
 523                             	.LCFI83:
 524                             		.loc 1 200 0
 525 00f6 C6                      		pop	hl
 526 00f7 C4                      		pop	de
 527 00f8 C2                      		pop	bc
 528 00f9 C0                      		pop	ax
 529 00fa 61 FC                   		reti
 530                             	.LFE20:
 532                             		.global	_INT_BRK_I
 534                             	_INT_BRK_I:
 535                             	.LFB21:
 201:../src/interrupt_handlers.c **** 
 202:../src/interrupt_handlers.c **** /*
 203:../src/interrupt_handlers.c ****  * INT_BRK_I (0x7E)
 204:../src/interrupt_handlers.c ****  */
 205:../src/interrupt_handlers.c **** void INT_BRK_I (void) { }
 536                             		.loc 1 205 0
 537                             		; start of function
 538                             		; push 8: ax bc de hl
 539 00fc 61 CF                   		sel	rb0
 540 00fe C1                      		push	ax
 541                             	.LCFI84:
 542 00ff C3                      		push	bc
 543                             	.LCFI85:
 544 0100 C5                      		push	de
 545                             	.LCFI86:
 546 0101 C7                      		push	hl
 547                             	.LCFI87:
 548                             		.loc 1 205 0
 549 0102 C6                      		pop	hl
 550 0103 C4                      		pop	de
 551 0104 C2                      		pop	bc
 552 0105 C0                      		pop	ax
 553 0106 61 FC                   		reti
 554                             	.LFE21:
 1102                             	.Letext0:
