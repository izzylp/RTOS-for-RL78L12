   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_g_switch_press
  28                             	.data
  31                             	_g_switch_press:
  32 0000 00                      		.zero	1
  33                             	.text
  34                             		.global	_INT_P0
  36                             	_INT_P0:
  37                             	.LFB0:
  38                             		.file 1 "../src/r_cg_intc_user.c"
   1:../src/r_cg_intc_user.c **** /**************************************************************************************************
   2:../src/r_cg_intc_user.c **** * DISCLAIMER
   3:../src/r_cg_intc_user.c **** * This software is supplied by Renesas Electronics Corporation and is only 
   4:../src/r_cg_intc_user.c **** * intended for use with Renesas products. No other uses are authorized. This 
   5:../src/r_cg_intc_user.c **** * software is owned by Renesas Electronics Corporation and is protected under 
   6:../src/r_cg_intc_user.c **** * all applicable laws, including copyright laws.
   7:../src/r_cg_intc_user.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING 
   8:../src/r_cg_intc_user.c **** * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT 
   9:../src/r_cg_intc_user.c **** * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
  10:../src/r_cg_intc_user.c **** * AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
  11:../src/r_cg_intc_user.c **** * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
  12:../src/r_cg_intc_user.c **** * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  13:../src/r_cg_intc_user.c **** * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR 
  14:../src/r_cg_intc_user.c **** * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE 
  15:../src/r_cg_intc_user.c **** * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  16:../src/r_cg_intc_user.c **** * Renesas reserves the right, without notice, to make changes to this software 
  17:../src/r_cg_intc_user.c **** * and to discontinue the availability of this software.  By using this software, 
  18:../src/r_cg_intc_user.c **** * you agree to the additional terms and conditions found by accessing the 
  19:../src/r_cg_intc_user.c **** * following link:
  20:../src/r_cg_intc_user.c **** * http://www.renesas.com/disclaimer
  21:../src/r_cg_intc_user.c **** *
  22:../src/r_cg_intc_user.c **** * Copyright (C) 2012 Renesas Electronics Corporation. All rights reserved.
  23:../src/r_cg_intc_user.c **** ***************************************************************************************************
  24:../src/r_cg_intc_user.c **** 
  25:../src/r_cg_intc_user.c **** /**************************************************************************************************
  26:../src/r_cg_intc_user.c **** * File Name    : r_cg_intc_user.c
  27:../src/r_cg_intc_user.c **** * Version      : Applilet3 for RL78/L12 V1.00.00 [23 Mar 2012]
  28:../src/r_cg_intc_user.c **** * Device(s)    : R5F10RLC
  29:../src/r_cg_intc_user.c **** * Tool-Chain   : GNURL78 v12.03
  30:../src/r_cg_intc_user.c **** * Description  : This file implements device driver for INTC module.
  31:../src/r_cg_intc_user.c **** * Creation Date: 21/01/2013
  32:../src/r_cg_intc_user.c **** ***************************************************************************************************
  33:../src/r_cg_intc_user.c **** 
  34:../src/r_cg_intc_user.c **** /**************************************************************************************************
  35:../src/r_cg_intc_user.c **** Includes
  36:../src/r_cg_intc_user.c **** ***************************************************************************************************
  37:../src/r_cg_intc_user.c **** /* Defines the I/O register structures */
  38:../src/r_cg_intc_user.c **** #include "iodefine.h"
  39:../src/r_cg_intc_user.c **** 
  40:../src/r_cg_intc_user.c **** /* Defines the extended I/O register structures */
  41:../src/r_cg_intc_user.c **** #include "iodefine_ext.h"
  42:../src/r_cg_intc_user.c **** 
  43:../src/r_cg_intc_user.c **** /* Header files inclusion */
  44:../src/r_cg_intc_user.c **** #include "r_cg_macrodriver.h"
  45:../src/r_cg_intc_user.c **** #include "r_cg_intc.h"
  46:../src/r_cg_intc_user.c **** #include "interrupt_handlers.h"
  47:../src/r_cg_intc_user.c **** #include "r_cg_userdefine.h"
  48:../src/r_cg_intc_user.c **** 
  49:../src/r_cg_intc_user.c **** /**************************************************************************************************
  50:../src/r_cg_intc_user.c **** Global variables and functions
  51:../src/r_cg_intc_user.c **** ***************************************************************************************************
  52:../src/r_cg_intc_user.c **** /* Declare a switch status variable flag */
  53:../src/r_cg_intc_user.c **** volatile uint8_t g_switch_press = 0;
  54:../src/r_cg_intc_user.c **** 
  55:../src/r_cg_intc_user.c **** 
  56:../src/r_cg_intc_user.c **** /**************************************************************************************************
  57:../src/r_cg_intc_user.c **** * Function Name: INT_P0
  58:../src/r_cg_intc_user.c **** * Description  : This function is INTP0 interrupt service routine.
  59:../src/r_cg_intc_user.c **** * Arguments    : None
  60:../src/r_cg_intc_user.c **** * Return Value : None
  61:../src/r_cg_intc_user.c **** ***************************************************************************************************
  62:../src/r_cg_intc_user.c **** void INT_P0 (void)
  63:../src/r_cg_intc_user.c **** {
  39                             		.loc 1 63 0
  40                             		; start of function
  41                             		; push 14: ax bc de hl r8 r10 r12
  42 0000 61 CF                   		sel	rb0
  43 0002 C1                      		push	ax
  44                             	.LCFI0:
  45 0003 C3                      		push	bc
  46                             	.LCFI1:
  47 0004 C5                      		push	de
  48                             	.LCFI2:
  49 0005 C7                      		push	hl
  50                             	.LCFI3:
  51 0006 61 DF                   		sel	rb1
  52 0008 C1                      		push	ax ; r8
  53                             	.LCFI4:
  54 0009 C3                      		push	bc ; r10
  55                             	.LCFI5:
  56 000a C5                      		push	de ; r12
  57                             	.LCFI6:
  58 000b 61 CF                   		sel	rb0
  64:../src/r_cg_intc_user.c ****     /* Set bit to indicate that SW1 has been pressed */
  65:../src/r_cg_intc_user.c ****     g_switch_press |= SWITCH_PRESS_1;
  59                             		.loc 1 65 0
  60 000d 8F 00 00                		mov	a, !_g_switch_press
  61 0010 9D F0                   		mov	r8, a
  62 0012 6A F0 01                		or	r8, #1
  63 0015 8D F0                   		mov	a, r8
  64 0017 9F 00 00                		mov	!_g_switch_press, a
  66:../src/r_cg_intc_user.c **** 
  67:../src/r_cg_intc_user.c ****     /* Clear SW1's (INTP0) interrupt flag */
  68:../src/r_cg_intc_user.c ****     PIF0 = 0;
  65                             		.loc 1 68 0
  66 001a C9 F0 E0 FF             		movw	r8, #-32
  67 001e AD F0                   		movw	ax, r8
  68 0020 BD F4                   		movw	r12, ax
  69 0022 FA F4                   		movw	hl, r12
  70 0024 8B                      		mov	a, [hl]
  71 0025 9D F2                   		mov	r10, a
  72 0027 5A F2 FB                		and	r10, #-5
  73 002a AD F0                   		movw	ax, r8
  74 002c 8D F2                   		mov	a, r10
  75 002e 9B                      		mov	[hl], a
  69:../src/r_cg_intc_user.c **** }
  76                             		.loc 1 69 0
  77 002f 61 DF                   		sel	rb1
  78 0031 C4                      		pop	de ; r12
  79 0032 C2                      		pop	bc ; r10
  80 0033 C0                      		pop	ax ; r8
  81 0034 61 CF                   		sel	rb0
  82 0036 C6                      		pop	hl
  83 0037 C4                      		pop	de
  84 0038 C2                      		pop	bc
  85 0039 C0                      		pop	ax
  86 003a 61 FC                   		reti
  87                             	.LFE0:
  89                             		.global	_INT_P3
  91                             	_INT_P3:
  92                             	.LFB1:
  70:../src/r_cg_intc_user.c **** /**************************************************************************************************
  71:../src/r_cg_intc_user.c **** * End of function INT_P0
  72:../src/r_cg_intc_user.c **** ***************************************************************************************************
  73:../src/r_cg_intc_user.c **** 
  74:../src/r_cg_intc_user.c **** /**************************************************************************************************
  75:../src/r_cg_intc_user.c **** * Function Name: INT_P3
  76:../src/r_cg_intc_user.c **** * Description  : This function is INTP3 interrupt service routine.
  77:../src/r_cg_intc_user.c **** * Arguments    : None
  78:../src/r_cg_intc_user.c **** * Return Value : None
  79:../src/r_cg_intc_user.c **** ***************************************************************************************************
  80:../src/r_cg_intc_user.c **** void INT_P3 (void)
  81:../src/r_cg_intc_user.c **** {
  93                             		.loc 1 81 0
  94                             		; start of function
  95                             		; push 14: ax bc de hl r8 r10 r12
  96 003c 61 CF                   		sel	rb0
  97 003e C1                      		push	ax
  98                             	.LCFI7:
  99 003f C3                      		push	bc
 100                             	.LCFI8:
 101 0040 C5                      		push	de
 102                             	.LCFI9:
 103 0041 C7                      		push	hl
 104                             	.LCFI10:
 105 0042 61 DF                   		sel	rb1
 106 0044 C1                      		push	ax ; r8
 107                             	.LCFI11:
 108 0045 C3                      		push	bc ; r10
 109                             	.LCFI12:
 110 0046 C5                      		push	de ; r12
 111                             	.LCFI13:
 112 0047 61 CF                   		sel	rb0
  82:../src/r_cg_intc_user.c ****     /* Set bit to indicate that SW2 has been pressed */
  83:../src/r_cg_intc_user.c ****     g_switch_press |= SWITCH_PRESS_2;
 113                             		.loc 1 83 0
 114 0049 8F 00 00                		mov	a, !_g_switch_press
 115 004c 9D F0                   		mov	r8, a
 116 004e 6A F0 02                		or	r8, #2
 117 0051 8D F0                   		mov	a, r8
 118 0053 9F 00 00                		mov	!_g_switch_press, a
  84:../src/r_cg_intc_user.c ****     
  85:../src/r_cg_intc_user.c ****     /* Clear SW2's (INTP3) interrupt flag */
  86:../src/r_cg_intc_user.c ****     PIF3 = 0;
 119                             		.loc 1 86 0
 120 0056 C9 F0 E0 FF             		movw	r8, #-32
 121 005a AD F0                   		movw	ax, r8
 122 005c BD F4                   		movw	r12, ax
 123 005e FA F4                   		movw	hl, r12
 124 0060 8B                      		mov	a, [hl]
 125 0061 9D F2                   		mov	r10, a
 126 0063 5A F2 DF                		and	r10, #-33
 127 0066 AD F0                   		movw	ax, r8
 128 0068 8D F2                   		mov	a, r10
 129 006a 9B                      		mov	[hl], a
  87:../src/r_cg_intc_user.c **** }
 130                             		.loc 1 87 0
 131 006b 61 DF                   		sel	rb1
 132 006d C4                      		pop	de ; r12
 133 006e C2                      		pop	bc ; r10
 134 006f C0                      		pop	ax ; r8
 135 0070 61 CF                   		sel	rb0
 136 0072 C6                      		pop	hl
 137 0073 C4                      		pop	de
 138 0074 C2                      		pop	bc
 139 0075 C0                      		pop	ax
 140 0076 61 FC                   		reti
 141                             	.LFE1:
 143                             		.global	_INT_P4
 145                             	_INT_P4:
 146                             	.LFB2:
  88:../src/r_cg_intc_user.c **** /**************************************************************************************************
  89:../src/r_cg_intc_user.c **** * End of function INT_P3
  90:../src/r_cg_intc_user.c **** ***************************************************************************************************
  91:../src/r_cg_intc_user.c **** 
  92:../src/r_cg_intc_user.c **** /**************************************************************************************************
  93:../src/r_cg_intc_user.c **** * Function Name: INT_P4
  94:../src/r_cg_intc_user.c **** * Description  : This function is INTP4 interrupt service routine.
  95:../src/r_cg_intc_user.c **** * Arguments    : None
  96:../src/r_cg_intc_user.c **** * Return Value : None
  97:../src/r_cg_intc_user.c **** ***************************************************************************************************
  98:../src/r_cg_intc_user.c **** void INT_P4 (void)
  99:../src/r_cg_intc_user.c **** {
 147                             		.loc 1 99 0
 148                             		; start of function
 149                             		; push 14: ax bc de hl r8 r10 r12
 150 0078 61 CF                   		sel	rb0
 151 007a C1                      		push	ax
 152                             	.LCFI14:
 153 007b C3                      		push	bc
 154                             	.LCFI15:
 155 007c C5                      		push	de
 156                             	.LCFI16:
 157 007d C7                      		push	hl
 158                             	.LCFI17:
 159 007e 61 DF                   		sel	rb1
 160 0080 C1                      		push	ax ; r8
 161                             	.LCFI18:
 162 0081 C3                      		push	bc ; r10
 163                             	.LCFI19:
 164 0082 C5                      		push	de ; r12
 165                             	.LCFI20:
 166 0083 61 CF                   		sel	rb0
 100:../src/r_cg_intc_user.c ****     /* Set bit to indicate that SW3 has been pressed */
 101:../src/r_cg_intc_user.c ****     g_switch_press |= SWITCH_PRESS_3;
 167                             		.loc 1 101 0
 168 0085 8F 00 00                		mov	a, !_g_switch_press
 169 0088 9D F0                   		mov	r8, a
 170 008a 6A F0 04                		or	r8, #4
 171 008d 8D F0                   		mov	a, r8
 172 008f 9F 00 00                		mov	!_g_switch_press, a
 102:../src/r_cg_intc_user.c ****     
 103:../src/r_cg_intc_user.c **** 
 104:../src/r_cg_intc_user.c ****     /* Clear SW3's (INTP4) interrupt flag */
 105:../src/r_cg_intc_user.c **** 	PIF4 = 0;
 173                             		.loc 1 105 0
 174 0092 C9 F0 E0 FF             		movw	r8, #-32
 175 0096 AD F0                   		movw	ax, r8
 176 0098 BD F4                   		movw	r12, ax
 177 009a FA F4                   		movw	hl, r12
 178 009c 8B                      		mov	a, [hl]
 179 009d 9D F2                   		mov	r10, a
 180 009f 5A F2 BF                		and	r10, #-65
 181 00a2 AD F0                   		movw	ax, r8
 182 00a4 8D F2                   		mov	a, r10
 183 00a6 9B                      		mov	[hl], a
 106:../src/r_cg_intc_user.c **** }
 184                             		.loc 1 106 0
 185 00a7 61 DF                   		sel	rb1
 186 00a9 C4                      		pop	de ; r12
 187 00aa C2                      		pop	bc ; r10
 188 00ab C0                      		pop	ax ; r8
 189 00ac 61 CF                   		sel	rb0
 190 00ae C6                      		pop	hl
 191 00af C4                      		pop	de
 192 00b0 C2                      		pop	bc
 193 00b1 C0                      		pop	ax
 194 00b2 61 FC                   		reti
 195                             	.LFE2:
 323                             	.Letext0:
 324                             		.file 2 "../src/iodefine.h"
 325                             		.file 3 "../src/r_cg_macrodriver.h"
